{"version":3,"sources":["scripts/main.js"],"names":["url","body","document","insertAdjacentHTML","ul","querySelector","getPhones","fetch","then","response","ok","json","Promise","reject","Error","status","catch","error","setTimeout","getPhonesDetails","callback","phones","map","phone","id","ids","arr","all","details","find","phoneDetails","name","forEach","phoneWithDetails"],"mappings":";AAAA,aAEA,IAAMA,EAAM,mEACNC,EAAOC,SAASD,KAEtBA,EAAKE,mBAAmB,YAAa,aAErC,IAAMC,EAAKH,EAAKI,cAAc,MAuB9B,SAASC,IACAC,OAAAA,MAASP,GAAAA,OAAAA,EAAT,UACJQ,KAAK,SAAAC,GACA,OAACA,EAASC,GAQPD,EAASE,OAPPC,QAAQC,OAAOC,MAEhBL,kCAAAA,OAAAA,EAASM,OAAYf,OAAAA,OAAAA,EAFpB,mDASVgB,MAAM,SAAAC,GAASC,OAAAA,WAAW,WACzBjB,EAAKE,mBAAmB,YAAgBc,GAAAA,OAAAA,KACvC,OAGP,SAASE,EAAiBC,GACjBA,OAAAA,IACJZ,KAAK,SAAAa,GAAUA,OAAAA,EAAOC,IAAI,SAAAC,GAASA,OAAAA,EAAMC,OACzChB,KAAK,SAAAiB,GACGA,OAAAA,EAAIH,IAAI,SAAAE,GACNjB,OAAAA,MAASP,GAAAA,OAAAA,EAAOwB,KAAAA,OAAAA,EAAhB,UACJhB,KAAK,SAAAC,GACA,OAACA,EAASC,GAQPD,EAASE,OAPPC,QAAQC,OAAOC,MAEhBL,8CAAAA,OAAAA,EAASM,OAAYf,OAAAA,OAAAA,EAAOwB,KAAAA,OAAAA,EAF3B,mEAWhBhB,KAAK,SAAAkB,GACGd,OAAAA,QAAQe,IAAID,KAEpBV,MAAM,SAAAC,GACLhB,EAAKE,mBAAmB,YAAgBc,GAAAA,OAAAA,MA9D9CX,IACGE,KAAK,SAAAa,GACsBA,EAAOC,IAAI,SAAAC,GAO5BA,OANPJ,EAAiBb,GAAWE,KAAK,SAAAoB,GAC/BL,EAAMK,QAAUA,EAAQC,KAAK,SAAAC,GACpBA,OAAAA,EAAaC,OAASR,EAAMQ,SAIhCR,IAGSS,QAAQ,SAAAC,GACxB7B,EAAGD,mBAAmB,YAEpB8B,qBAAAA,OAAAA,EAAiBF,KAFnB","file":"main.2d174025.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst url = 'https://mate-academy.github.io/phone-catalogue-static/api/phones';\nconst body = document.body;\n\nbody.insertAdjacentHTML('beforeend', '<ul></ul>');\n\nconst ul = body.querySelector('ul');\n\ngetPhones()\n  .then(phones => {\n    const phonesWithDetails = phones.map(phone => {\n      getPhonesDetails(getPhones).then(details => {\n        phone.details = details.find(phoneDetails => {\n          return phoneDetails.name === phone.name;\n        });\n      });\n\n      return phone;\n    });\n\n    phonesWithDetails.forEach(phoneWithDetails => {\n      ul.insertAdjacentHTML('beforeend', `\n    <li>\n      ${phoneWithDetails.name};\n    </li>\n  `);\n    });\n  });\n\nfunction getPhones() {\n  return fetch(`${url}.json`)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(Error(`\n          <div>\n            ${response.status} - ${url}.json Not found\n          </div>\n        `));\n      }\n\n      return response.json();\n    })\n    .catch(error => setTimeout(() => {\n      body.insertAdjacentHTML('beforeend', `${error}`);\n    }, 5000));\n}\n\nfunction getPhonesDetails(callback) {\n  return callback()\n    .then(phones => phones.map(phone => phone.id))\n    .then(ids => {\n      return ids.map(id => {\n        return fetch(`${url}/${id}.json`)\n          .then(response => {\n            if (!response.ok) {\n              return Promise.reject(Error(`\n                <div>\n                  ${response.status} - ${url}/${id}.json Not found\n                </div>\n              `));\n            }\n\n            return response.json();\n          });\n      });\n    })\n    .then(arr => {\n      return Promise.all(arr);\n    })\n    .catch(error => {\n      body.insertAdjacentHTML('beforeend', `${error}`);\n    });\n}\n"]}